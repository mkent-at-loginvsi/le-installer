---
- name: Ensure local admin account
  user:
    name: "{{ admin_username }}"
    state: present
    password: "{{ admin_password | password_hash('sha512') }}"
    shell: /bin/bash
    update_password: on_create
    createhome: yes
    group: "{{ admin_username }}"
  when: not appliance_installed.stat.exists

- name: Ensure local admin account is in sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "{{ admin_username }} ALL=(ALL) NOPASSWD:ALL"
    validate: /usr/sbin/visudo -cf %s
  when: not appliance_installed.stat.exists

- name: Ensure local loginenterprise group
  group:
    name: loginenterprise
    state: present
    gid: 1002
  when: not appliance_installed.stat.exists

- name: Install default packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - unzip
    - nano

- name: Install pdmenu
  package:
    name: https://download.opensuse.org/repositories/shells/CentOS_5/x86_64/pdmenu-1.3.2-3.2.x86_64.rpm
    state: present
  when: not appliance_installed.stat.exists

- name: Enable fstrim.timer
  systemd:
    name: fstrim.timer
    enabled: yes
    state: started
  when: not appliance_installed.stat.exists

- name: Allow ssh password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication'
    line: 'PasswordAuthentication yes'
    state: present
  notify: restart sshd
  when: not appliance_installed.stat.exists
  # Handler to restart sshd

- name: Configure sysctl.conf
  lineinfile:
  dest: /etc/sysctl.conf
  line: '{{ item }}'
  state: present
  with:
    - net.ipv4.conf.all.accept_redirects=0
    - net.ipv4.conf.all.secure_redirects=0
    - net.ipv4.conf.all.send_redirects=0
    - net.ipv4.conf.default.accept_redirects=0
    - net.ipv4.conf.default.secure_redirects=0
    - net.ipv4.conf.default.send_redirects=0
    - net.ipv6.conf.all.accept_redirects=0
    - net.ipv6.conf.default.accept_redirects=0
    - net.ipv6.conf.all.disable_ipv6 = 1
    - net.ipv6.conf.default.disable_ipv6 = 1
    - net.ipv6.conf.lo.disable_ipv6 = 1
    - net.ipv4.ip_forward = 1
  when: not appliance_installed.stat.exists
  # Reload sysctl.conf

- name: Unarchive Login Enterprise Software (directory)
  unarchive:
    src: "{{ le_appliance_zip }}"
    dest: "{{ le_appliance_dir }}"
    remote_src: yes
    extra_opts: [--strip-components=1]
  when: not appliance_installed.stat.exists

- name: Install Docker
  include_role:
    name: geerlingguy.docker
  when: not appliance_installed.stat.exists

- name: Install Docker Compose
  pip:
    name: docker-compose
    state: present
  when: not appliance_installed.stat.exists

- name: Initialize Docker Swarm
  shell: docker swarm init
  args:
    creates: /etc/docker/swarm_initialized
  when: not appliance_installed.stat.exists

- name: Load Docker images
  shell: docker load -i "{{ temp_dir }}/appliance/images/*"